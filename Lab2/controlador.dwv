library IEEE;
use IEEE.STD_LOGIC_1164.all;

library LogicWorks;
use LogicWorks.debug.all;

   entity controlador_cache is
        generic (retardo: time := 4 ns);
        port (reloj, pcero: in STD_LOGIC;
               LES: in STD_LOGIC;
               PET: in STD_LOGIC;
               LISTO: out STD_LOGIC;
               
               AF: in STD_LOGIC;
               PED: out STD_LOGIC;
               PEET: out STD_LOGIC;
               PEV: out STD_LOGIC;
               val: out STD_LOGIC;
               
               MLES: out STD_LOGIC;
               MPET: out STD_LOGIC;
               MLISTO: in STD_LOGIC;
               muxL: out STD_LOGIC;
               muxE: out STD_LOGIC;
               VEST: out std_logic_vector (3 downto 0));
   end;
  
   architecture synth of controlador_cache is
   
      constant SI : std_logic := '1';
      constant NO : std_logic := '0';
      
      constant lectura : std_logic := '1';      
      constant escritura : std_logic := '0';
      
      constant acierto : std_logic := '1';      
      constant fallo : std_logic := '0';

      constant PETICION : std_logic := '1';      
      constant NOPETICION : std_logic := '0';
                           
      type tipoestado is (DES, ESP1, ESP2, ESP3);
      signal estado, prxestado: tipoestado;

	  constant VESTDESO: std_logic_vector :="1000";	-- Estado DESO	
	  constant VESTESP1: std_logic_vector :="0100";	-- Estado ESP1	
	  constant VESTESP2: std_logic_vector :="0010";	-- Estado ESP2	
	  constant VESTESP3: std_logic_vector :="0001";	-- Estado ESP3	


      

      signal TPED: std_logic :='1';
      signal TPEV: std_logic :='1';
      signal TPEET: std_logic :='1';
      
    function flanco_ascendente (signal reloj: std_logic) return boolean is
    variable flanco: boolean:= FALSE;
    begin
      flanco := (reloj = '1' and reloj'event);
    return (flanco);
    end flanco_ascendente;      
      
   begin
   

-- actualizacion de cache
   PED <= not (TPED and (not reloj)) after retardo;
   PEET <= not (TPEET and (not reloj)) after retardo; 
   PEV <= not (TPEV and (not reloj)) after retardo;
   
end;